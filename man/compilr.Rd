% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compilr.R
\name{compilr}
\alias{compilr}
\title{Compute Between-person, Within-person, and Total Composition and Isometric log ratio transform of a (dataset of) composition(s)}
\usage{
compilr(data, sbp, idvar = "ID")
}
\arguments{
\item{data}{A composition or dataset of composition. Required.}

\item{sbp}{A signary matrix indicating sequential binary partition. Required.}

\item{idvar}{A character string indicating the name of the variable containing IDs.}
}
\value{
A list with ten elements.
\itemize{
\item{\code{BetweenComp}}{ A vector of class \code{acomp} representing one closed between-person composition
or a matrix of class \code{acomp} representing multiple closed between-person compositions each in one row.}
\item{\code{WithinComp}}{ A vector of class \code{acomp} representing one closed within-person composition
or a matrix of class \code{acomp} representing multiple closed within-person compositions each in one row.}
\item{\code{TotalComp}}{ A vector of class \code{acomp} representing one closed total composition
or a matrix of class \code{acomp} representing multiple closed total compositions each in one row.}
\item{\code{BetweenILR}}{ Isometric log ratio transform of between-person composition.}
\item{\code{WithinILR}}{ Isometric log ratio transform of within-person composition.}
\item{\code{TotalILR}}{ Isometric log ratio transform of total composition.}
\item{\code{data}}{ The user's dataset.}
\item{\code{psi}}{ A ILR matrix associated with user-defined partition structure.}
\item{\code{sbp}}{ The user-defined sequential binary partition matrix. }
\item{\code{idvar}}{ Name of the variable containing IDs.}
}
}
\description{
This function is designed to help calculate sets of compositions and IRLs
for Multilevel Compositional Data models
}
\examples{

data(mcompd)
compilrtest <- compilr(data = mcompd[, 1:6], sbp = sbp, idvar = "ID")
str(compilrtest)
## cleanup
rm(compilrtest, mcompd)
##TODO - check for 0 in data - ask users to check
}
