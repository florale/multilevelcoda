---
title: "Multilevel Model with Compositional Outcomes"
output: 
  html_document:
    theme: spacelab
    highlight: kate
    toc: yes
    toc_float: yes
    collapsed: no
    smooth_scroll: no
    toc_depth: 4
    fig_width: 6
    fig_height: 4
    fig_caption: yes
    number_sections: true
vignette: >
  %\VignetteIndexEntry{Multilevel Model with Compositional Outcomes}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  dev = "CairoPNG", dpi = 150, fig.path = "mlmcoda-"
)
```

In this vignette, we discuss how to specify multilevel models with compositional outcomes using `multilevelcoda`. 
In addition to `multilevelcoda`, we will use `brms` package (to fit models) and
`bayestestR` package (to compute useful indices and compare models). 
We will also attach built in datasets `mcompd` (simulated compositional sleep and wake variables) 
and `sbp` (sequential binary partition).

```{r setup}
library(multilevelcoda)
library(brms)
library(bayestestR)

data("mcompd") 
data("sbp") 

options(digits = 3)
```

# Multilevel model with compositional outcomes.
## Computing compositions and isometric log ratio coordinates. 
The ILR coordinates outcomes can be calculated using the `compilr()` functions.

```{r compilr}
cilr <- compilr(data = mcompd, sbp = sbp,
                parts = c("TST", "WAKE", "MVPA", "LPA", "SB"), idvar = "ID", total = 1440)

head(cilr$TotalILR)
```

## Fitting model

A model with multilevel compositional outcomes is multivariate, as it has multiple ILR coordinate outcomes,each of which is predicted by a set of predictors. 
Our `brms` model can be then fitted using the `brmcoda()` function.

```{r brmcoda, results = "hide", message=FALSE}
mv <- brmcoda(compilr = cilr,
              formula = mvbind(ilr1, ilr2, ilr3, ilr4) ~ Stress + (1 | ID),
              cores = 8, seed = 123, backend = "cmdstanr")
```

Here is a `summary()` of the model. 
We can see that stress significantly predicted `ilr1` and `ilr2`. 

```{r summary}
summary(mv)
```

# Bayes Factor for compositional multilevel modelling

We are often interested in whether a predictor significantly predict the overall composition, in addition to the individual ILR coordinates. 
In Bayesian, this can be done by comparing the marginal likelihoods of two models. 
Bayes Factors (BFs) are indices of relative evidence of one model over another. 
In the context of compositional multilevel modelling, Bayes Factors provide two main useful functions:

- Testing single parameters within a model
- Comparing models 

We can utilize Bayes factors to answer the following question: 
*"Which model (i.e., set of composition predictors, expressed as ILRs) is more likely to have produced the observed data?"*

Let's examine whether stress predicts the overall sleep-wake composition.

*Note*: To use Bayes factors, `brmsfit` models must be fitted with an additional non-default argument
`save_pars = save_pars(all = TRUE)`.

```{r bfmodel, results = "hide", message=FALSE}
# intercept only
mv0 <- brmcoda(compilr = cilr,
               formula = mvbind(ilr1, ilr2, ilr3, ilr4) ~ 1 + (1 | ID),
               iter = 6000, chains = 8, cores = 8, seed = 123, warmup = 1000,
               backend = "cmdstanr", save_pars = save_pars(all = TRUE))
# full model
mv <- brmcoda(compilr = cilr,
              formula = mvbind(ilr1, ilr2, ilr3, ilr4) ~ Stress + (1 | ID),
              iter = 6000, chains = 8, cores = 8, seed = 123, warmup = 1000,
              backend = "cmdstanr", save_pars = save_pars(all = TRUE))
```

We can now compare these models with the `bayesfactor_models()` function

```{r bf, message=FALSE}
bayes_factor(mv$Model, mv0$Model)
```



With a $BF$ < 1, our data favours the intercept only model, showing that there is 
insufficient evidence for stress predicting the overall sleep-wake composition.

Bayes factors provide a intuitive measure of the strength of evidence of one model over the other
or among different models. Check out the `bayestestR` packages for several other useful functions related to BFs.
