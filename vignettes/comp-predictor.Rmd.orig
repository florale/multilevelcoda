---
title: "Multilevel Model with Compositional predictors"
output:
  html_document:
    toc: true
    toc_float:
      collapsed: false
      smooth_scroll: true
    toc_depth: 3
vignette: >
  %\VignetteIndexEntry{Multilevel Model with Compositional predictors}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  dev = "CairoPNG", dpi = 150, fig.path = "mlmcoda-"
)
```

In this vignette, we discuss how to specify multilevel models with compositional data using `multilevelcoda`.

In addition to `multilevelcoda` package, we will use `brms` (to fit models) and
`bayestestR` (to compute useful indices and compare models), and
`doFuture` (to parallel models).

```{r setup}
library(multilevelcoda)
library(brms)
library(bayestestR)
library(doFuture)

options(digits = 3) # reduce number of digits shown
```

We will also attach built in datasets `mcompd` (simulated compositional sleep and wake variables)  `sbp` (sequential binary partition), and `psub` (base possible substitution).

```{r data}
data("mcompd") 
data("sbp")
data("psub")
```

## Getting compositions and isometric log ratio (ILR) coordinates. 

Compositional data are often expressed as a set of ILR coordinates in regression models (cite).
Using the `compilr()`, we can get ILR coordinates 
that are used in the subsequent model as the predictors or outcomes.

```{r}
cilr <- compilr(data = mcompd, sbp = sbp,
                parts = c("TST", "WAKE", "MVPA", "LPA", "SB"), idvar = "ID")
```

## Multilevel model with compositional predictors

We now will use output from the `compilr()` to fit our `brms` model,
using the `brmcoda()`. Here is a model predicting `STRESS`
from between- and within-person sleep-wake behaviours (expressed as ILR coordinates).

Note: make sure you pass the correct names of the ILR coordinates to `brms` model.

```{r, results = "hide"}
m <- brmcoda(compilr = cilr,
             formula = STRESS ~ bilr1 + bilr2 + bilr3 + bilr4 +
               wilr1 + wilr2 + wilr3 + wilr4 + (1 | ID),
             cores = 8, seed = 123, backend = "cmdstanr")
```

Here is a `summary()` of the model results.

```{r}
summary(m$Model)
```

The interpretation of these outputs depends on how you construct your sequential binary partition.
For the built-in sequential binary partition `sbp`, TODO add a table to show partition.

Thus, results show that the first and forth within-person ILR coordinate was associated with stress.
Due to the nature of within-person ILR coordinates, it can be a pain interpreting these results in great details.
For example,  the significant coefficient for wilr1 shows that the within-person change in sleep behaviours
(sleep duration and time awake in bed combined), relative to wake behaviours (moderate to vigorous
physical activity, light physical activity, and sedentary behaviour) on a given day, was associated 
with stress. However, as there are several behaviours involved in this coordinate, we don't know the
within-person change in which of them drives the association. It could be the change in sleep, such 
that people sleep more than their own average on a given day, but it could also be the change in time 
awake. Further, we don't know about the specific changes in time spent across behaviours. That is, 
if people slept more, what behaviour did they spend less time in?

So how do we understand these results? `multilevelcoda` offers post-hoc analyses to gain further 
insights about these relationship, which is discussed `here`.

## Bayes factor for compositional multilevel modelling

In the frequentist approach, we usually compare the fits of models using `anova()`.
In Bayesian, this can be done by comparing the marginal likelihoods of two models.

Bayes Factors (BFs) are indices of relative evidence of one model over another. 
In the context of compositional multilevel modelling, Bayes Factors provide two main useful functions:
- testing single parameters within a model
- comparing models

We can utilize Bayes factors to answer the following question:

*"Which model is more likely to have produced the observed data?"*

*Note*: To use Bayes factors, `brmsfit` models must be fitted with an additional non-default argument
`save_pars = save_pars(all = TRUE)`.

Let's fit a series of model with `brmcoda()` to predict `STRESS` from sleep-wake composition.
For precise Bayes factors, we will use 40,000 posterior draws for each model.

```{r, results = "hide"}
# intercept only model
m0 <- brmcoda(compilr = cilr,
             formula = STRESS ~ 1 + (1 | ID),
             iter = 6000, chains = 8, cores = 8, seed = 123, warmup = 1000,
             backend = "cmdstanr", save_pars = save_pars(all = TRUE))

# between-person composition only model
m1 <- brmcoda(compilr = cilr,
             formula = STRESS ~ bilr1 + bilr2 + bilr3 + bilr4 + (1 | ID),
             iter = 6000, chains = 8, cores = 8, seed = 123, warmup = 1000,
             backend = "cmdstanr", save_pars = save_pars(all = TRUE))

# within-person composition only model
m2 <- brmcoda(compilr = cilr,
             formula = STRESS ~ wilr1 + wilr2 + wilr3 + wilr4 + (1 | ID),
             iter = 6000, chains = 8, cores = 8, seed = 123, warmup = 1000,
             backend = "cmdstanr", save_pars = save_pars(all = TRUE))

# full model
m <- brmcoda(compilr = cilr,
             formula = STRESS ~ bilr1 + bilr2 + bilr3 + bilr4 +
               wilr1 + wilr2 + wilr3 + wilr4 + (1 | ID),
             iter = 6000, chains = 8, cores = 8, seed = 123, warmup = 1000,
             backend = "cmdstanr", save_pars = save_pars(all = TRUE))
```

We can now compare these models with the `bayesfactor_models()` function, using the intercept-only 
model as reference.

```{r}
comparison <- bayesfactor_models(m$Model, m1$Model, m2$Model, denominator = m0$Model)
comparison
```
We can see that model with only within-person composition is the best model - with $BF$ = 11.86 compared to the null (intercept only).

Let's compare these models against the full model.

```{r}
update(comparison, reference = 1)
```
Again, our data favours the within-person composition only model over the full model, giving 2.93 times more support.

Bayes factors provide a intuitive measure of the strength of evidence of one model over the other
or among different models. Check out the `bayestestR` packages for several other useful functions related to BFs.

## Between-person substitution models
We often are also interested in the changes in an outcomes when a fixed duration of time is reallocated
from one behaviour to another, while the other behaviours remain constant. Substitution models is a useful post-hoc analysis for regression models with compositional predictors.

Between-person substitution model can be computed using the `bsub()` function. The below example 
examines the changes in stress for different pairwise substitution of sleep-wake behaviours
for a period of 1 to 5 minutes, at between-person level. 


```{r}
bsubm1 <- bsub(objec = m, substitute = psub, minute = 5)
```

Output from `bsub()` contains multiple dataset of results for all available compositional component. 
Here are the results for changes in stress when sleep (TST) is substituted for 5 minutes for both 
males (Female = 0) and females (Female = 1). For ease of presentation, we only show the $\pm5$ minute 
substitution results, but the full dataset would contain similar results for 1, 2, etc. minute substitutions.

```{r, results = "asis"}
knitr::kable(bsubm1$TST[abs(MinSubstituted) == 5])
```

None of them are significant, given that the credible intervals did not cross 0, showing that 
increasing sleep (TST) at the expense of any other behaviours was not associated in changes in stress.

These results can be plotted to see the patterns more easily using the `plotsub()` function.

```{r mlmcoda-bstresstst, fig.width = 9, fig.height = 6}
plotsub(data = bsubm1$TST, x = "sleep", y = "stress")
```

### Within-person substitution model

Let's now take a look at how stress changes when different pairwise of sleep-wake behaviours are
substituted for a period of 1 to 5 minutes, at within-person level. 

```{r}
# Within-person substitution
wsubm1 <- wsub(objec = m, substitute = psub, minute = 5, summary = TRUE)
``` 

Results for 5 minute substitution.

```{r, results = "asis"}
knitr::kable(wsubm1$TST[abs(MinSubstituted) == 5])
```

At within-person level, we got some significant results for substitution of sleep (TST) and time 
awake in bed (WAKE) for 5 minutes, but not other behaviours. Increasing sleep at the expense of time spent awake 
in bed predicted 0.02 higher stress [95% CI 0.00, 0.03], on a given day. Conversely, less sleep and 
more time awake in bed predicted less stress (b = -0.016 [95% CI -0.03,	-0.00]). Notice there is no 
column indicating the levels of convariates, indicating that these results have been averaged. 

Let's also plot theses results.

```{r mlmcoda-wstresstst, fig.width = 9, fig.height = 6}
plotsub(data = wsubm1$TST, x = "sleep", y = "stress")
``` 


### More about interesting substitution models


## References

Dumuid, D., Pedišić, Ž., Stanford, T. E., Martín-Fernández, J. A., Hron, K., Maher, C. A., ... & Olds, T. (2019). The compositional isotemporal substitution model: a method for estimating changes in a health outcome for reallocation of time between sleep, physical activity and sedentary behaviour. Statistical methods in medical research, 28(3), 846-857.

Egozcue, J. J., Pawlowsky-Glahn, V., Mateu-Figueras, G., & Barcelo-Vidal, C. (2003). Isometric logratio transformations for compositional data analysis. Mathematical geology, 35(3), 279-300.

