---
title: "Multilevel Models with Compositional Predictors"
output:
  html_document:
    toc: true
    toc_float:
      collapsed: false
      smooth_scroll: true
    toc_depth: 3
vignette: >
  %\VignetteIndexEntry{Multilevel Models with Compositional Predictors}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  dev = "CairoPNG", dpi = 150, fig.path = "mlmcoda-"
)
```

In this vignette, we discuss how to specify multilevel models with compositional predictor using `multilevelcoda`.

To begin with, we need to load several packages and attach 
built in datasets with simulated compositional sleep and wake variables.

```{r setup}
library(multilevelcoda)
library(brms)
library(bayestestR)
library(doFuture)

data("mcompd") # dataset with compositional variables
data("psub") # base possible substitution data
data("sbp") # sequential binary partitition

options(digits = 3) # reduce number of digits shown
```

## Getting compositions and isometric log ratio (ILR) coordinates. 

This uses the `compilr()` function.
The coordinates are used in the subsequent model as the predictors

```{r}
cilr <- compilr(data = mcompd, sbp = sbp,
                parts = c("TST", "WAKE", "MVPA", "LPA", "SB"), idvar = "ID")
```

## Multilevel model with compositional predictors

We now will use output from the `compilr()` function for our `brms` model,
fit using the `brmcoda()` function.

```{r, results = "hide"}
m <- brmcoda(compilr = cilr,
             formula = STRESS ~ bilr1 + bilr2 + bilr3 + bilr4 +
               wilr1 + wilr2 + wilr3 + wilr4 + Female + (1 | ID),
             chain = 8, cores = 8, iter = 8000, seed = 123,
              save_pars = save_pars(all = TRUE),
             backend = "cmdstanr")
```

Here is a `summary()` of the model results.

```{r}
summary(m$Model)
```

Bayesfactor comparison.
TODO `m1` and `m0` not currently defined.

```{r}
## comparison <- bayesfactor_models(m1$Model,
##                                  denominator = m0$Model)
## comparison
```

## Substitution model

```{r}
# Within-person substitution
registerDoFuture()
plan(multisession, workers = 5)
wsubm <- wsub(objec = m, substitute = psub, minute = 5, summary = TRUE)
``` 

For ease of presentation, we only show the $\pm5$ minute 
substitution results, but the full dataset would contain similar 
results for 1, 2, etc. minute substitutions.

```{r, results = "asis"}
knitr::kable(wsubm$TST[abs(MinSubstituted) == 5])
```

Results can be plotted to see the patterns more easily.

```{r mlmcoda-wstresstst, fig.width = 9, fig.height = 6}
plotsub(data = wsubm$TST, x = "stress", y = "sleep")
``` 

Again for ease of presentation, we only show the $\pm5$ minute 
substitution results, but the full dataset would contain similar 
results for 1, 2, etc. minute substitutions.

```{r, results = "asis"}
bsubm <- bsub(objec = m, substitute = psub, minute = 5, summary = TRUE)

knitr::kable(bsubm$TST[abs(MinSubstituted) == 5])
```

```{r mlmcoda-bstresstst, fig.width = 9, fig.height = 6}
plotsub(data = bsubm$TST, x = "stress", y = "sleep")
```
