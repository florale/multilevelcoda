# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: cmdstan env vars
        run: |
          echo "CMDSTAN_PATH=${HOME}/.cmdstan" >> $GITHUB_ENV
        shell: bash
      
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev || true
          sudo apt-get install -y openmpi-bin openmpi-common libopenmpi-dev || true

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}
      
      - name: Install dependencies
        run: |
          Sys.setenv("MAKEFLAGS"="-j2")
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_local(path = ".")
          install.packages("curl")
        shell: Rscript {0}
        
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: NA
          extra-packages: |
            rcmdcheck
            BH
            RcppEigen
            stan-dev/cmdstanr
            testthat
            knitr
            rmarkdown
            doFuture
            lme4
            
      - name: Build Cmdstan
        run: |
          cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          cmdstanr::install_cmdstan(cores = parallel::detectCores())
        shell: Rscript {0}
        
      - uses: r-lib/actions/check-r-package@v2